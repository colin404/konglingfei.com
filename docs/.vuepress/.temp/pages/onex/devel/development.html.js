export const data = JSON.parse("{\"key\":\"v-7cb46bf5\",\"path\":\"/onex/devel/development.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2024-03-01T00:00:00.000Z\",\"lastUpdated\":true,\"comment\":false,\"icon\":\"zhinan\",\"order\":1,\"breadcrumb\":false,\"category\":[\"OneX\"],\"description\":\"前面，我详细给你介绍了如何部署、测试 OneX 项目，带你打通了整个开发、测试环境及部署流程。本节课，我会给你展示下如何修改 OneX 项目源码，并编译、部署和测试。 为了，能够给你演示整个二次开发场景，这里，假设我们要给 onex-fakeserver 组件的订单接口，加上日志调用代码行，以打印函数调用记录。 提示 onex-fakeserver 是一个实验、测试服务，可以用它来测试，集成一些新的功能、特性。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://konglingfei.com/onex/devel/development.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"孔令飞的云原生实战营\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"前面，我详细给你介绍了如何部署、测试 OneX 项目，带你打通了整个开发、测试环境及部署流程。本节课，我会给你展示下如何修改 OneX 项目源码，并编译、部署和测试。 为了，能够给你演示整个二次开发场景，这里，假设我们要给 onex-fakeserver 组件的订单接口，加上日志调用代码行，以打印函数调用记录。 提示 onex-fakeserver 是一个实验、测试服务，可以用它来测试，集成一些新的功能、特性。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"孔令飞\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-03-01T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2024-03-01T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"孔令飞\\\",\\\"email\\\":\\\"colin404@foxmail.com\\\",\\\"url\\\":\\\"https://konglingfei.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"如何修改源码？\",\"slug\":\"如何修改源码\",\"link\":\"#如何修改源码\",\"children\":[]},{\"level\":2,\"title\":\"修改完代码后如何编译源码？\",\"slug\":\"修改完代码后如何编译源码\",\"link\":\"#修改完代码后如何编译源码\",\"children\":[{\"level\":3,\"title\":\"编译 OneX 源码\",\"slug\":\"编译-onex-源码\",\"link\":\"#编译-onex-源码\",\"children\":[]},{\"level\":3,\"title\":\"构建容器镜像\",\"slug\":\"构建容器镜像\",\"link\":\"#构建容器镜像\",\"children\":[]},{\"level\":3,\"title\":\"推送容器镜像\",\"slug\":\"推送容器镜像\",\"link\":\"#推送容器镜像\",\"children\":[]}]},{\"level\":2,\"title\":\"如何本机快速部署验证\",\"slug\":\"如何本机快速部署验证\",\"link\":\"#如何本机快速部署验证\",\"children\":[{\"level\":3,\"title\":\"容器化部署时，如何更新服务？\",\"slug\":\"容器化部署时-如何更新服务\",\"link\":\"#容器化部署时-如何更新服务\",\"children\":[]},{\"level\":3,\"title\":\"本机非容器化部署时，如何更新服务？\",\"slug\":\"本机非容器化部署时-如何更新服务\",\"link\":\"#本机非容器化部署时-如何更新服务\",\"children\":[]}]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]},{\"level\":2,\"title\":\"课后练习\",\"slug\":\"课后练习\",\"link\":\"#课后练习\",\"children\":[]}],\"readingTime\":{\"minutes\":15.65,\"words\":4694},\"filePathRelative\":\"onex/devel/development.md\",\"localizedDate\":\"2024年3月1日\",\"excerpt\":\"<p>前面，我详细给你介绍了如何部署、测试 OneX 项目，带你打通了整个开发、测试环境及部署流程。本节课，我会给你展示下如何修改 OneX 项目源码，并编译、部署和测试。</p>\\n<p>为了，能够给你演示整个二次开发场景，这里，假设我们要给 onex-fakeserver 组件的订单接口，加上日志调用代码行，以打印函数调用记录。</p>\\n<div class=\\\"hint-container tip\\\">\\n<p class=\\\"hint-container-title\\\">提示</p>\\n<p>onex-fakeserver 是一个实验、测试服务，可以用它来测试，集成一些新的功能、特性。</p>\\n</div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
