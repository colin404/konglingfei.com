export const data = JSON.parse("{\"key\":\"v-8daa1a0e\",\"path\":\"/\",\"title\":\"主页\",\"lang\":\"zh-CN\",\"frontmatter\":{\"home\":true,\"icon\":\"home\",\"title\":\"主页\",\"heroText\":\"孔令飞的云原生实战营\",\"heroImage\":\"/logo.png\",\"tagline\":\"一个助你进阶为 Go + 云原生高级工程师的实战圈\",\"actions\":[{\"text\":\"接入指南\",\"link\":\"/v2/jt-808/guide/\",\"type\":\"primary\"},{\"text\":\"快速开始\",\"link\":\"/v2/jt-808/guide/quick-start/quick-start\"},{\"text\":\"配 置\",\"link\":\"/v2/jt-808/config/\"}],\"features\":[{\"title\":\"基于Netty\",\"details\":\"TCP处理基于Netty 4.x。\",\"icon\":\"code\"},{\"title\":\"Spring-Boot驱动\",\"details\":\"提供 Spring-Boot-Starter，开箱即用、可定制化。\",\"icon\":\"leaf\"},{\"title\":\"简洁至上\",\"details\":\"注解驱动开发，省时省力。\",\"icon\":\"semantic\"}],\"footer\":\"<a href=\\\"https://beian.miit.gov.cn/#/Integrated/index\\\" target=\\\"_blank\\\">备案号: 沪ICP备2022029946号-2</a >\",\"description\":\"项目结构 . ├── build-script # gradle用到的构建脚本和checkstyle配置 ├── docs # 文档 (vue-press) ├── gradle ├── jt-808-server-spring-boot-starter # spring-boot-v3 自动配置 (jdk17+) ├── jt-808-server-spring-boot-starter-boot2 # spring-boot-v2 自动配置 (jdk11+) ├── jt-808-server-support # jt-808的实现 ├── jt-core # 一些公共类(后期可能改名为 jt-common) ├── jt-spring # 和 spring 集成相关的类(2.x不再依赖,后期可能删除) └── samples # 示例项目 ├── jt-808-server-sample-bare # 几乎零配置的示例(spring-boot-2.x) ├── jt-808-server-sample-bare-boot3 # 几乎零配置的示例(spring-boot-3.x) ├── jt-808-server-sample-annotation # 注解相关的示例(spring-boot-2.x) ├── jt-808-server-sample-customized # 定制化示例(spring-boot-2.x) ├── jt-808-client-sample-debug # 开发时用来Debug的项目,请忽略 └── jt-808-server-sample-debug # 开发时用来Debug的项目,请忽略\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://konglingfei.com/\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"文档演示\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"主页\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"项目结构 . ├── build-script # gradle用到的构建脚本和checkstyle配置 ├── docs # 文档 (vue-press) ├── gradle ├── jt-808-server-spring-boot-starter # spring-boot-v3 自动配置 (jdk17+) ├── jt-808-server-spring-boot-starter-boot2 # spring-boot-v2 自动配置 (jdk11+) ├── jt-808-server-support # jt-808的实现 ├── jt-core # 一些公共类(后期可能改名为 jt-common) ├── jt-spring # 和 spring 集成相关的类(2.x不再依赖,后期可能删除) └── samples # 示例项目 ├── jt-808-server-sample-bare # 几乎零配置的示例(spring-boot-2.x) ├── jt-808-server-sample-bare-boot3 # 几乎零配置的示例(spring-boot-3.x) ├── jt-808-server-sample-annotation # 注解相关的示例(spring-boot-2.x) ├── jt-808-server-sample-customized # 定制化示例(spring-boot-2.x) ├── jt-808-client-sample-debug # 开发时用来Debug的项目,请忽略 └── jt-808-server-sample-debug # 开发时用来Debug的项目,请忽略\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"website\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"孔令飞\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"WebPage\\\",\\\"name\\\":\\\"主页\\\",\\\"description\\\":\\\"项目结构 . ├── build-script # gradle用到的构建脚本和checkstyle配置 ├── docs # 文档 (vue-press) ├── gradle ├── jt-808-server-spring-boot-starter # spring-boot-v3 自动配置 (jdk17+) ├── jt-808-server-spring-boot-starter-boot2 # spring-boot-v2 自动配置 (jdk11+) ├── jt-808-server-support # jt-808的实现 ├── jt-core # 一些公共类(后期可能改名为 jt-common) ├── jt-spring # 和 spring 集成相关的类(2.x不再依赖,后期可能删除) └── samples # 示例项目 ├── jt-808-server-sample-bare # 几乎零配置的示例(spring-boot-2.x) ├── jt-808-server-sample-bare-boot3 # 几乎零配置的示例(spring-boot-3.x) ├── jt-808-server-sample-annotation # 注解相关的示例(spring-boot-2.x) ├── jt-808-server-sample-customized # 定制化示例(spring-boot-2.x) ├── jt-808-client-sample-debug # 开发时用来Debug的项目,请忽略 └── jt-808-server-sample-debug # 开发时用来Debug的项目,请忽略\\\"}\"]]},\"headers\":[{\"level\":2,\"title\":\"项目结构\",\"slug\":\"项目结构\",\"link\":\"#项目结构\",\"children\":[]},{\"level\":2,\"title\":\"软件版本\",\"slug\":\"软件版本\",\"link\":\"#软件版本\",\"children\":[]}],\"readingTime\":{\"minutes\":1.18,\"words\":355},\"filePathRelative\":\"README.md\",\"excerpt\":\"<h2>项目结构</h2>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\" data-title=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token builtin class-name\\\">.</span>\\n├── build-script    <span class=\\\"token comment\\\"># gradle用到的构建脚本和checkstyle配置</span>\\n├── docs            <span class=\\\"token comment\\\"># 文档 (vue-press)</span>\\n├── gradle\\n├── jt-808-server-spring-boot-starter       <span class=\\\"token comment\\\"># spring-boot-v3 自动配置 (jdk17+)</span>\\n├── jt-808-server-spring-boot-starter-boot2 <span class=\\\"token comment\\\"># spring-boot-v2 自动配置 (jdk11+)</span>\\n├── jt-808-server-support                   <span class=\\\"token comment\\\"># jt-808的实现</span>\\n├── jt-core                                 <span class=\\\"token comment\\\"># 一些公共类(后期可能改名为 jt-common)</span>\\n├── jt-spring                               <span class=\\\"token comment\\\"># 和 spring 集成相关的类(2.x不再依赖,后期可能删除)</span>\\n└── samples         <span class=\\\"token comment\\\"># 示例项目</span>\\n    ├── jt-808-server-sample-bare           <span class=\\\"token comment\\\"># 几乎零配置的示例(spring-boot-2.x)</span>\\n    ├── jt-808-server-sample-bare-boot3     <span class=\\\"token comment\\\"># 几乎零配置的示例(spring-boot-3.x)</span>\\n    ├── jt-808-server-sample-annotation     <span class=\\\"token comment\\\"># 注解相关的示例(spring-boot-2.x)</span>\\n    ├── jt-808-server-sample-customized     <span class=\\\"token comment\\\"># 定制化示例(spring-boot-2.x)</span>\\n    ├── jt-808-client-sample-debug          <span class=\\\"token comment\\\"># 开发时用来Debug的项目,请忽略</span>\\n    └── jt-808-server-sample-debug          <span class=\\\"token comment\\\"># 开发时用来Debug的项目,请忽略</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
