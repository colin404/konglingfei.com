export const data = JSON.parse("{\"key\":\"v-8d4f717e\",\"path\":\"/cloudnative/catalog/kubernetes.html\",\"title\":\"Kubernetes 开发实战课程目录\",\"lang\":\"zh-CN\",\"frontmatter\":{\"footer\":false,\"description\":\"Kubernetes 开发实战课程目录 一个非常优质的 Kubernetes 开发实战课，助你进阶为云原生高级工程师！ 课程目录如下： 序号 标题 001 开篇词：如何撬开云原生世界的大门，享受云原生带来的技术红利？ 002 Kubernetes 源码剖析：通过 Kubernetes 代码仓库学习 Kubernetes 003 Kubernetes 源码剖析：一文读懂 Kubernetes 源码构建、测试和本地调试的方法 004 Kubernetes 源码剖析：一窥云原生巨头 Kubernetes 的 Go 依赖管理之道 005 Kubernetes 源码剖析：通过 Kubernetes 的工作流，来学习大型开源项目工作流的设计方式 006 Kubernetes 源码剖析：通过 Kubernetes 应用构建模型，来看如何构建应用 007 Kubernetes 源码剖析：Kubernetes 核心数据结构精解 008 Kubernetes 源码剖析：kube-apiserver 核心设计和实现 009 Kubernetes 源码剖析：kube-scheduler 核心设计和实现 010 Kubernetes 源码剖析：通过 local-up-cluster.sh 脚本来看如何搭建 Kubernetes 集群 011 反哺业务开发：Kubernetes 有哪些开发方法可以反哺业务开发？ 012 Kubernetes 核心特性：Kubernetes 的配置管理之道 013 Kubernetes 核心特性：Kubernetes 是如何管理 Feature Gate 的？ 014 client-go：client-go 项目介绍 015 client-go 客户端：RESTClient 客户端原理及实战 016 client-go 客户端：DiscoveryClient 客户端原理及实战 017 client-go 客户端：ClientSet 客户端原理及实战 018 client-go 客户端：DynamicClient 客户端原理及实战 019 client-go 客户端：ScaleClient 客户端原理及实战 020 client-go Informer 机制：Informer：Informer 架构设计及原理 021 client-go Informer 机制：Informer 创建及启动流程分析 022 client-go Informer 机制：Reflector 源码剖析与实战 023 client-go Informer 机制：DeltaFIFO 源码剖析与实战 024 client-go Informer 机制：Controller 源码剖析 025 client-go Informer 机制：Indexer 源码剖析与实战 026 client-go 核心功能：WorkQueue 源码剖析与实战 027 client-go 核心功能：EventBroadcaster 事件管理器 028 client-go 核心功能：乐观锁原理与实战 029 client-go 核心功能：client-go 多副本选举功能设计与实战 030 client-go 活学活用：如何开发 client-go 风格的 Go SDK？ 031 client-go 活学活用：client-go 中有哪些开发技巧可供我们学习使用？ 032 自定义资源：Kubernetes CRD 概念及功能介绍 033 自定义资源：自定义资源的创建和定义 034 自定义资源：Kubernetes CRD 部署实战 035 自定义资源： 自定义资源的高级功能 036 自定义资源： 自定义资源的扩展 037 自定义资源： 如何自定义资源版本 038 自定义资源：结构化 Schema 与 CRD 的未来 039 自定义资源： 自定义资源的最佳实践和注意事项 040 自定义资源： 自定义资源的社区支持和资源 041 代码自动生成：为什么需要代码生成器？ 042 代码自动生成： 如何调用代码生成器？ 043 代码自动生成： 如何通过标签控制代码生成器？ 044 代码自动生成：如何生成 client-go 风格 的 Go SDK？ 045 代码自动生成：各类代码生成开发与实战 046 Controller：Controller 有哪些类型，如何选择合适的 Controller 类型并高效快速的开发？ 047 Custom Controller：如何开发一个最简单的 Controller？ 048 Custom Controller：sample-controller 介绍、部署及使用 049 Custom Controller：sample-controller 实现详解 050 Custom Controller：如何基于 sample-controller 快速开发一个 controller？ 051 controller-runtime 原理及实战：controller-runtime 原理及实战 052 controller-runtime 原理及实战：Manager 模块源码剖析 053 controller-runtime 原理及实战：Controller 模块源码剖析 054 controller-runtime 原理及实战：Client 模块源码剖析 055 controller-runtime 原理及实战：Cache 模块源码剖析 056 controller-runtime 原理及实战：WebHook 模块源码剖析 057 controller-runtime 原理及实战：Reconciler 模块源码剖析 058 controller-runtime 原理及实战：Source 模块源码剖析 059 controller-runtime 原理及实战：EventHandler 模块源码剖析 060 controller-runtime 原理及实战：Predicate 模块源码剖析 061 controller-runtime 原理及实战：controller-runtime 最佳实践 062 controller-runtime 原理及实战：kubebuilder 实战及源码解读 063 controller-runtime 原理及实战：controller-tools 介绍及实战 064 Operator Controller：如何使用 Kuerbuild 快速开发一个 Operator 065 Operator Controller：如何部署 Operator？ 066 Operator Controller：社区有哪些优秀的 Operator，它们分别用在什么场景？ 067 聚合 API 服务器：我们为什么需要编写一个 Aggregated APIServer 068 聚合 API 服务器：kube-apiserver 聚合架构实现剖析 069 聚合 API 服务器：如何部署聚合 API 服务器？ 070 聚合 API 服务器：如何实现一个准入 Webhook？ 071 自定义 API 服务器：sample-apiserver 介绍、部署及使用 072 自定义 API 服务器：sample-apiserver 实现详解 073 自定义 API 服务器：如何基于 sample-apiserver 开发自定义 API 服务器？ 074 APIServer 项目实战：如何基于 sample-apiserver 开发一个不依赖于 Kubernetes 的 APIServer？ 075 APIServer 项目实战：onex-apiserver 架构设计详解 076 APIServer 项目实战：onex-apiserver 启动流程分析 077 APIServer 项目实战：onex-apiserver 如何完美使用 kubectl 提供的功能 078 APIServer 项目实战：如何注册一个新的资源类型（资源添加、注册、Table 功能）？ 079 APIServer 项目实战：onex-apiserver 如何迁移 Kubernetes 原生的资源？ 080 APIServer 项目实战：onex-apiserver Admission Controller 实现解析 081 APIServer 项目实战：如何添加一个 Adminssion Webhook？ 082 APIServer 项目实战：如何添加 Authentication Webhook？ 083 APIServer 项目实战：如何添加一个 Authorization Webhook？ 084 Controller 项目实战：onex-controller-manager 实现分析 085 Controller 项目实战：onex-minerset-controller 实现分析 086 Controller 项目实战：onex-miner-controller 实现分析 087 Controller 项目实战：onex controller 事件过滤器剖析 088 Controller 项目实战：Controller 缓存能力建设 089 Controller 项目实战：如何仅依赖 onex-apiserver 生成全局唯一 ID？ 090 Controller 项目实战：如何提高 Reconcile 吞吐量及如何进行客户端限流？ 091 Controller 项目实战：如何通过 controller 删除资源？ 092 Controller 项目实战：Controller 性能测试及分析 093 Controller 项目实战：Controller 性能测试及分析 094 Controller 项目实战：如何测试 Controller？ 095 Controller 项目实战：开发 Controller 时，有哪些坑，如何避免？ 096 核心能力构建：OneX 配额限制能力建设 097 核心能力构建：OneX 安全能力建设 098 核心能力构建：OneX 事件能力建设 099 核心能力构建：onex-apiserver 性能测试及分析 100 核心能力构建：onex-apiserver FeatureGate 功能实现 101 核心能力构建：如何使用 Kuberentes 的方式来配置 OneX 服务？ 102 核心能力构建：如何全方位监控你的应用？ 103 核心能力构建：如何构建一个可快速排障的日志系统？ 104 容器化部署实战：软件发布流程、环境及多环境处理 105 容器化部署实战：Docker 镜像的构建原理和方式 106 容器化部署实战：如何编写 Dockerfile 文件？ 107 容器化部署实战：如何编写 Kubernetes 资源定义文件？ 108 容器化部署实战：服务部署时，如何进行权限管控？ 109 容器化部署实战：使用 Kuberentes 资源定于文件部署 OneX 项目 110 Kustomize 部署实战：Kustomize 基础及使用实战 111 Kustomize 部署实战：基于 Kustomize 的应用部署实战 112 Helm 部署实战：Helm 基础知识介绍 113 Helm 部署实战：Helm 基本操作实战 114 Helm 部署实战：使用 Helm 部署 OneX 应用实战 115 运维能力构建实战（日志）：如何快速构建 OneX 的日志排障系统？ 116 运维能力构建实战（监控）：如何快速构建 OneX 的监控体系？ 117 运维能力构建实战（调用链）：如何快速构建 OneX 的调用链体系？ 118 进入圈子：云原生生态圈介绍 119 开源贡献：如何向开源社区贡献代码？ 120 下一站：学完 Kubernetes 编程的下一站是哪里？如何进一步提升技术能力、职场竞争力，并获取更高的职场收益？\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://konglingfei.com/cloudnative/catalog/kubernetes.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"文档演示\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Kubernetes 开发实战课程目录\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Kubernetes 开发实战课程目录 一个非常优质的 Kubernetes 开发实战课，助你进阶为云原生高级工程师！ 课程目录如下： 序号 标题 001 开篇词：如何撬开云原生世界的大门，享受云原生带来的技术红利？ 002 Kubernetes 源码剖析：通过 Kubernetes 代码仓库学习 Kubernetes 003 Kubernetes 源码剖析：一文读懂 Kubernetes 源码构建、测试和本地调试的方法 004 Kubernetes 源码剖析：一窥云原生巨头 Kubernetes 的 Go 依赖管理之道 005 Kubernetes 源码剖析：通过 Kubernetes 的工作流，来学习大型开源项目工作流的设计方式 006 Kubernetes 源码剖析：通过 Kubernetes 应用构建模型，来看如何构建应用 007 Kubernetes 源码剖析：Kubernetes 核心数据结构精解 008 Kubernetes 源码剖析：kube-apiserver 核心设计和实现 009 Kubernetes 源码剖析：kube-scheduler 核心设计和实现 010 Kubernetes 源码剖析：通过 local-up-cluster.sh 脚本来看如何搭建 Kubernetes 集群 011 反哺业务开发：Kubernetes 有哪些开发方法可以反哺业务开发？ 012 Kubernetes 核心特性：Kubernetes 的配置管理之道 013 Kubernetes 核心特性：Kubernetes 是如何管理 Feature Gate 的？ 014 client-go：client-go 项目介绍 015 client-go 客户端：RESTClient 客户端原理及实战 016 client-go 客户端：DiscoveryClient 客户端原理及实战 017 client-go 客户端：ClientSet 客户端原理及实战 018 client-go 客户端：DynamicClient 客户端原理及实战 019 client-go 客户端：ScaleClient 客户端原理及实战 020 client-go Informer 机制：Informer：Informer 架构设计及原理 021 client-go Informer 机制：Informer 创建及启动流程分析 022 client-go Informer 机制：Reflector 源码剖析与实战 023 client-go Informer 机制：DeltaFIFO 源码剖析与实战 024 client-go Informer 机制：Controller 源码剖析 025 client-go Informer 机制：Indexer 源码剖析与实战 026 client-go 核心功能：WorkQueue 源码剖析与实战 027 client-go 核心功能：EventBroadcaster 事件管理器 028 client-go 核心功能：乐观锁原理与实战 029 client-go 核心功能：client-go 多副本选举功能设计与实战 030 client-go 活学活用：如何开发 client-go 风格的 Go SDK？ 031 client-go 活学活用：client-go 中有哪些开发技巧可供我们学习使用？ 032 自定义资源：Kubernetes CRD 概念及功能介绍 033 自定义资源：自定义资源的创建和定义 034 自定义资源：Kubernetes CRD 部署实战 035 自定义资源： 自定义资源的高级功能 036 自定义资源： 自定义资源的扩展 037 自定义资源： 如何自定义资源版本 038 自定义资源：结构化 Schema 与 CRD 的未来 039 自定义资源： 自定义资源的最佳实践和注意事项 040 自定义资源： 自定义资源的社区支持和资源 041 代码自动生成：为什么需要代码生成器？ 042 代码自动生成： 如何调用代码生成器？ 043 代码自动生成： 如何通过标签控制代码生成器？ 044 代码自动生成：如何生成 client-go 风格 的 Go SDK？ 045 代码自动生成：各类代码生成开发与实战 046 Controller：Controller 有哪些类型，如何选择合适的 Controller 类型并高效快速的开发？ 047 Custom Controller：如何开发一个最简单的 Controller？ 048 Custom Controller：sample-controller 介绍、部署及使用 049 Custom Controller：sample-controller 实现详解 050 Custom Controller：如何基于 sample-controller 快速开发一个 controller？ 051 controller-runtime 原理及实战：controller-runtime 原理及实战 052 controller-runtime 原理及实战：Manager 模块源码剖析 053 controller-runtime 原理及实战：Controller 模块源码剖析 054 controller-runtime 原理及实战：Client 模块源码剖析 055 controller-runtime 原理及实战：Cache 模块源码剖析 056 controller-runtime 原理及实战：WebHook 模块源码剖析 057 controller-runtime 原理及实战：Reconciler 模块源码剖析 058 controller-runtime 原理及实战：Source 模块源码剖析 059 controller-runtime 原理及实战：EventHandler 模块源码剖析 060 controller-runtime 原理及实战：Predicate 模块源码剖析 061 controller-runtime 原理及实战：controller-runtime 最佳实践 062 controller-runtime 原理及实战：kubebuilder 实战及源码解读 063 controller-runtime 原理及实战：controller-tools 介绍及实战 064 Operator Controller：如何使用 Kuerbuild 快速开发一个 Operator 065 Operator Controller：如何部署 Operator？ 066 Operator Controller：社区有哪些优秀的 Operator，它们分别用在什么场景？ 067 聚合 API 服务器：我们为什么需要编写一个 Aggregated APIServer 068 聚合 API 服务器：kube-apiserver 聚合架构实现剖析 069 聚合 API 服务器：如何部署聚合 API 服务器？ 070 聚合 API 服务器：如何实现一个准入 Webhook？ 071 自定义 API 服务器：sample-apiserver 介绍、部署及使用 072 自定义 API 服务器：sample-apiserver 实现详解 073 自定义 API 服务器：如何基于 sample-apiserver 开发自定义 API 服务器？ 074 APIServer 项目实战：如何基于 sample-apiserver 开发一个不依赖于 Kubernetes 的 APIServer？ 075 APIServer 项目实战：onex-apiserver 架构设计详解 076 APIServer 项目实战：onex-apiserver 启动流程分析 077 APIServer 项目实战：onex-apiserver 如何完美使用 kubectl 提供的功能 078 APIServer 项目实战：如何注册一个新的资源类型（资源添加、注册、Table 功能）？ 079 APIServer 项目实战：onex-apiserver 如何迁移 Kubernetes 原生的资源？ 080 APIServer 项目实战：onex-apiserver Admission Controller 实现解析 081 APIServer 项目实战：如何添加一个 Adminssion Webhook？ 082 APIServer 项目实战：如何添加 Authentication Webhook？ 083 APIServer 项目实战：如何添加一个 Authorization Webhook？ 084 Controller 项目实战：onex-controller-manager 实现分析 085 Controller 项目实战：onex-minerset-controller 实现分析 086 Controller 项目实战：onex-miner-controller 实现分析 087 Controller 项目实战：onex controller 事件过滤器剖析 088 Controller 项目实战：Controller 缓存能力建设 089 Controller 项目实战：如何仅依赖 onex-apiserver 生成全局唯一 ID？ 090 Controller 项目实战：如何提高 Reconcile 吞吐量及如何进行客户端限流？ 091 Controller 项目实战：如何通过 controller 删除资源？ 092 Controller 项目实战：Controller 性能测试及分析 093 Controller 项目实战：Controller 性能测试及分析 094 Controller 项目实战：如何测试 Controller？ 095 Controller 项目实战：开发 Controller 时，有哪些坑，如何避免？ 096 核心能力构建：OneX 配额限制能力建设 097 核心能力构建：OneX 安全能力建设 098 核心能力构建：OneX 事件能力建设 099 核心能力构建：onex-apiserver 性能测试及分析 100 核心能力构建：onex-apiserver FeatureGate 功能实现 101 核心能力构建：如何使用 Kuberentes 的方式来配置 OneX 服务？ 102 核心能力构建：如何全方位监控你的应用？ 103 核心能力构建：如何构建一个可快速排障的日志系统？ 104 容器化部署实战：软件发布流程、环境及多环境处理 105 容器化部署实战：Docker 镜像的构建原理和方式 106 容器化部署实战：如何编写 Dockerfile 文件？ 107 容器化部署实战：如何编写 Kubernetes 资源定义文件？ 108 容器化部署实战：服务部署时，如何进行权限管控？ 109 容器化部署实战：使用 Kuberentes 资源定于文件部署 OneX 项目 110 Kustomize 部署实战：Kustomize 基础及使用实战 111 Kustomize 部署实战：基于 Kustomize 的应用部署实战 112 Helm 部署实战：Helm 基础知识介绍 113 Helm 部署实战：Helm 基本操作实战 114 Helm 部署实战：使用 Helm 部署 OneX 应用实战 115 运维能力构建实战（日志）：如何快速构建 OneX 的日志排障系统？ 116 运维能力构建实战（监控）：如何快速构建 OneX 的监控体系？ 117 运维能力构建实战（调用链）：如何快速构建 OneX 的调用链体系？ 118 进入圈子：云原生生态圈介绍 119 开源贡献：如何向开源社区贡献代码？ 120 下一站：学完 Kubernetes 编程的下一站是哪里？如何进一步提升技术能力、职场竞争力，并获取更高的职场收益？\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"孔令飞\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Kubernetes 开发实战课程目录\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"孔令飞\\\",\\\"email\\\":\\\"colin404@foxmail.com\\\",\\\"url\\\":\\\"https://konglingfei.com\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":6.94,\"words\":2082},\"filePathRelative\":\"cloudnative/catalog/kubernetes.md\",\"excerpt\":\"<h1>Kubernetes 开发实战课程目录</h1>\\n<p>一个非常优质的 Kubernetes 开发实战课，助你进阶为云原生高级工程师！</p>\\n<p>课程目录如下：</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\\"text-align:center\\\">序号</th>\\n<th style=\\\"text-align:left\\\">标题</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\\"text-align:center\\\">001</td>\\n<td style=\\\"text-align:left\\\">开篇词：如何撬开云原生世界的大门，享受云原生带来的技术红利？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">002</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：通过 Kubernetes 代码仓库学习 Kubernetes</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">003</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：一文读懂 Kubernetes 源码构建、测试和本地调试的方法</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">004</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：一窥云原生巨头 Kubernetes 的 Go 依赖管理之道</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">005</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：通过 Kubernetes 的工作流，来学习大型开源项目工作流的设计方式</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">006</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：通过 Kubernetes 应用构建模型，来看如何构建应用</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">007</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：Kubernetes 核心数据结构精解</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">008</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：kube-apiserver 核心设计和实现</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">009</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：kube-scheduler 核心设计和实现</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">010</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 源码剖析：通过 <a href=\\\"http://local-up-cluster.sh\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">local-up-cluster.sh</a> 脚本来看如何搭建 Kubernetes 集群</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">011</td>\\n<td style=\\\"text-align:left\\\">反哺业务开发：Kubernetes 有哪些开发方法可以反哺业务开发？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">012</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 核心特性：Kubernetes 的配置管理之道</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">013</td>\\n<td style=\\\"text-align:left\\\">Kubernetes 核心特性：Kubernetes 是如何管理 Feature Gate 的？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">014</td>\\n<td style=\\\"text-align:left\\\">client-go：client-go 项目介绍</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">015</td>\\n<td style=\\\"text-align:left\\\">client-go 客户端：RESTClient 客户端原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">016</td>\\n<td style=\\\"text-align:left\\\">client-go 客户端：DiscoveryClient 客户端原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">017</td>\\n<td style=\\\"text-align:left\\\">client-go 客户端：ClientSet 客户端原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">018</td>\\n<td style=\\\"text-align:left\\\">client-go 客户端：DynamicClient 客户端原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">019</td>\\n<td style=\\\"text-align:left\\\">client-go 客户端：ScaleClient 客户端原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">020</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：Informer：Informer 架构设计及原理</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">021</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：Informer 创建及启动流程分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">022</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：Reflector 源码剖析与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">023</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：DeltaFIFO 源码剖析与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">024</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：Controller 源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">025</td>\\n<td style=\\\"text-align:left\\\">client-go Informer 机制：Indexer 源码剖析与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">026</td>\\n<td style=\\\"text-align:left\\\">client-go 核心功能：WorkQueue 源码剖析与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">027</td>\\n<td style=\\\"text-align:left\\\">client-go 核心功能：EventBroadcaster 事件管理器</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">028</td>\\n<td style=\\\"text-align:left\\\">client-go 核心功能：乐观锁原理与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">029</td>\\n<td style=\\\"text-align:left\\\">client-go 核心功能：client-go 多副本选举功能设计与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">030</td>\\n<td style=\\\"text-align:left\\\">client-go 活学活用：如何开发 client-go 风格的 Go SDK？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">031</td>\\n<td style=\\\"text-align:left\\\">client-go 活学活用：client-go 中有哪些开发技巧可供我们学习使用？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">032</td>\\n<td style=\\\"text-align:left\\\">自定义资源：Kubernetes CRD 概念及功能介绍</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">033</td>\\n<td style=\\\"text-align:left\\\">自定义资源：自定义资源的创建和定义</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">034</td>\\n<td style=\\\"text-align:left\\\">自定义资源：Kubernetes CRD 部署实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">035</td>\\n<td style=\\\"text-align:left\\\">自定义资源： 自定义资源的高级功能</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">036</td>\\n<td style=\\\"text-align:left\\\">自定义资源： 自定义资源的扩展</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">037</td>\\n<td style=\\\"text-align:left\\\">自定义资源： 如何自定义资源版本</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">038</td>\\n<td style=\\\"text-align:left\\\">自定义资源：结构化 Schema 与 CRD 的未来</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">039</td>\\n<td style=\\\"text-align:left\\\">自定义资源： 自定义资源的最佳实践和注意事项</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">040</td>\\n<td style=\\\"text-align:left\\\">自定义资源： 自定义资源的社区支持和资源</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">041</td>\\n<td style=\\\"text-align:left\\\">代码自动生成：为什么需要代码生成器？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">042</td>\\n<td style=\\\"text-align:left\\\">代码自动生成： 如何调用代码生成器？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">043</td>\\n<td style=\\\"text-align:left\\\">代码自动生成： 如何通过标签控制代码生成器？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">044</td>\\n<td style=\\\"text-align:left\\\">代码自动生成：如何生成 client-go 风格 的 Go SDK？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">045</td>\\n<td style=\\\"text-align:left\\\">代码自动生成：各类代码生成开发与实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">046</td>\\n<td style=\\\"text-align:left\\\">Controller：Controller 有哪些类型，如何选择合适的 Controller 类型并高效快速的开发？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">047</td>\\n<td style=\\\"text-align:left\\\">Custom Controller：如何开发一个最简单的 Controller？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">048</td>\\n<td style=\\\"text-align:left\\\">Custom Controller：sample-controller 介绍、部署及使用</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">049</td>\\n<td style=\\\"text-align:left\\\">Custom Controller：sample-controller 实现详解</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">050</td>\\n<td style=\\\"text-align:left\\\">Custom Controller：如何基于 sample-controller 快速开发一个 controller？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">051</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：controller-runtime 原理及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">052</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Manager 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">053</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Controller 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">054</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Client 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">055</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Cache 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">056</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：WebHook 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">057</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Reconciler 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">058</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Source 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">059</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：EventHandler 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">060</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：Predicate 模块源码剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">061</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：controller-runtime 最佳实践</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">062</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：kubebuilder 实战及源码解读</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">063</td>\\n<td style=\\\"text-align:left\\\">controller-runtime 原理及实战：controller-tools 介绍及实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">064</td>\\n<td style=\\\"text-align:left\\\">Operator Controller：如何使用 Kuerbuild 快速开发一个 Operator</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">065</td>\\n<td style=\\\"text-align:left\\\">Operator Controller：如何部署 Operator？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">066</td>\\n<td style=\\\"text-align:left\\\">Operator Controller：社区有哪些优秀的 Operator，它们分别用在什么场景？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">067</td>\\n<td style=\\\"text-align:left\\\">聚合 API 服务器：我们为什么需要编写一个 Aggregated APIServer</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">068</td>\\n<td style=\\\"text-align:left\\\">聚合 API 服务器：kube-apiserver 聚合架构实现剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">069</td>\\n<td style=\\\"text-align:left\\\">聚合 API 服务器：如何部署聚合 API 服务器？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">070</td>\\n<td style=\\\"text-align:left\\\">聚合 API 服务器：如何实现一个准入 Webhook？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">071</td>\\n<td style=\\\"text-align:left\\\">自定义 API 服务器：sample-apiserver 介绍、部署及使用</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">072</td>\\n<td style=\\\"text-align:left\\\">自定义 API 服务器：sample-apiserver 实现详解</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">073</td>\\n<td style=\\\"text-align:left\\\">自定义 API 服务器：如何基于 sample-apiserver 开发自定义 API 服务器？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">074</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：如何基于 sample-apiserver 开发一个不依赖于 Kubernetes 的 APIServer？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">075</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：onex-apiserver 架构设计详解</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">076</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：onex-apiserver 启动流程分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">077</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：onex-apiserver 如何完美使用 kubectl 提供的功能</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">078</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：如何注册一个新的资源类型（资源添加、注册、Table 功能）？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">079</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：onex-apiserver 如何迁移 Kubernetes 原生的资源？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">080</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：onex-apiserver Admission Controller 实现解析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">081</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：如何添加一个 Adminssion Webhook？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">082</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：如何添加 Authentication Webhook？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">083</td>\\n<td style=\\\"text-align:left\\\">APIServer 项目实战：如何添加一个 Authorization Webhook？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">084</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：onex-controller-manager 实现分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">085</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：onex-minerset-controller 实现分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">086</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：onex-miner-controller 实现分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">087</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：onex controller 事件过滤器剖析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">088</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：Controller 缓存能力建设</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">089</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：如何仅依赖 onex-apiserver 生成全局唯一 ID？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">090</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：如何提高 Reconcile 吞吐量及如何进行客户端限流？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">091</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：如何通过 controller 删除资源？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">092</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：Controller 性能测试及分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">093</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：Controller 性能测试及分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">094</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：如何测试 Controller？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">095</td>\\n<td style=\\\"text-align:left\\\">Controller 项目实战：开发 Controller 时，有哪些坑，如何避免？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">096</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：OneX 配额限制能力建设</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">097</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：OneX 安全能力建设</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">098</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：OneX 事件能力建设</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">099</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：onex-apiserver 性能测试及分析</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">100</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：onex-apiserver FeatureGate 功能实现</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">101</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：如何使用 Kuberentes 的方式来配置 OneX 服务？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">102</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：如何全方位监控你的应用？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">103</td>\\n<td style=\\\"text-align:left\\\">核心能力构建：如何构建一个可快速排障的日志系统？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">104</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：软件发布流程、环境及多环境处理</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">105</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：Docker 镜像的构建原理和方式</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">106</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：如何编写 Dockerfile 文件？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">107</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：如何编写 Kubernetes 资源定义文件？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">108</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：服务部署时，如何进行权限管控？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">109</td>\\n<td style=\\\"text-align:left\\\">容器化部署实战：使用 Kuberentes 资源定于文件部署 OneX 项目</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">110</td>\\n<td style=\\\"text-align:left\\\">Kustomize 部署实战：Kustomize 基础及使用实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">111</td>\\n<td style=\\\"text-align:left\\\">Kustomize 部署实战：基于 Kustomize 的应用部署实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">112</td>\\n<td style=\\\"text-align:left\\\">Helm 部署实战：Helm 基础知识介绍</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">113</td>\\n<td style=\\\"text-align:left\\\">Helm 部署实战：Helm 基本操作实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">114</td>\\n<td style=\\\"text-align:left\\\">Helm 部署实战：使用 Helm 部署 OneX 应用实战</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">115</td>\\n<td style=\\\"text-align:left\\\">运维能力构建实战（日志）：如何快速构建 OneX 的日志排障系统？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">116</td>\\n<td style=\\\"text-align:left\\\">运维能力构建实战（监控）：如何快速构建 OneX 的监控体系？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">117</td>\\n<td style=\\\"text-align:left\\\">运维能力构建实战（调用链）：如何快速构建 OneX 的调用链体系？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">118</td>\\n<td style=\\\"text-align:left\\\">进入圈子：云原生生态圈介绍</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">119</td>\\n<td style=\\\"text-align:left\\\">开源贡献：如何向开源社区贡献代码？</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">120</td>\\n<td style=\\\"text-align:left\\\">下一站：学完 Kubernetes 编程的下一站是哪里？如何进一步提升技术能力、职场竞争力，并获取更高的职场收益？</td>\\n</tr>\\n</tbody>\\n</table>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
